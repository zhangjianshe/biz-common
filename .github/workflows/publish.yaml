name: Publish biz-common to Maven Central

# Configure Triggers:
on:
  # Triggers when a new Git tag is pushed (e.g., git push --tags)
  push:
    tags:
      - '*'
  # Allows manual triggering from the GitHub Actions UI
  workflow_dispatch:
    inputs:
      tag:
        description: 'Specify an optional tag/version for manual deployment (e.g., 1.2.3)'
        required: false
        default: 'manual-run'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      # 1. Setup JDK 17 Environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 2. Robust GPG Key Import and Trust Setup (Fixes "No secret key")
      - name: Import GPG Private Key and Set Trust
        run: |
          # Write the secret key to a temporary file for reliable multi-line import
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > private.key
          
          # Import the key using gpg in batch mode
          gpg --batch --yes --import private.key
          
          # Explicitly set full trust for the key. This is CRITICAL for GPG in headless CI 
          # to allow the key to be used for signing. 
          # The command below feeds gpg "5" (I trust) and "y" (yes, confirm).
          echo -e "5\ny\n" | gpg --command-fd 0 --edit-key B62622FD20A7594D18EBADC613811CD56A6956AE trust
          
          # Clean up the temporary key file
          rm private.key

      # 3. Publish and Deploy to Maven Central (Fixes 401 and settings-security.xml errors)
      - name: Publish to Maven Central
        # -P release: Activates the release profile (sources, javadoc, signing) in pom.xml
        # -D... flags: Overrides configuration files to provide credentials/passphrase directly.
        run: mvn --batch-mode deploy -P release \
          -Dgpg.keyname=B62622FD20A7594D18EBADC613811CD56A6956AE \
          -Dcentral-publishing.username=${{ secrets.MAVEN_USERNAME }} \
          -Dcentral-publishing.password=${{ secrets.MAVEN_PASSWORD }}

        # Environment variables used by the GPG plugin for signing in batch mode
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
